{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edfb3a64.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={onClick}\r\n        className='btn'\r\n        style={{ backgroundColor: color }}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","import Button from './Button'\r\n\r\nconst Header = ({ onAdd, showAdd }) => {\r\n  return (\r\n    <div>\r\n      <header className='header'>\r\n        <h1>Task Tracker</h1>\r\n        <Button\r\n          color={showAdd ? 'red' : 'green'}\r\n          text={showAdd ? 'Close' : 'Add'}\r\n          onClick={onAdd}\r\n        />\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\n// css in js\r\n// const headingStyle = {\r\n//   color: 'red',\r\n//   backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? 'reminder' : ''} `}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n        />{' '}\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!text) {\r\n      alert('Please add a Task')\r\n      return\r\n    }\r\n    onAdd({ text, day, reminder })\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day and Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day and Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Attend classes',\n      day: ' feb 14 at 2:30PM',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Meeting at the School',\n      day: ' sept 14 at 2:30PM',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Food Shopping',\n      day: ' oct 10 at 2:30PM',\n      reminder: false,\n    },\n  ])\n\n  //Add task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 1000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  //delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <div className='container'>\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No Tasks left '\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}